import { DevtoolsProvider } from "@providers/devtools";
import { useNotificationProvider } from "@refinedev/antd";
import { GitHubBanner, Refine } from "@refinedev/core";
import { RefineKbar, RefineKbarProvider } from "@refinedev/kbar";
import routerProvider from "@refinedev/nextjs-router";
import { Metadata } from "next";
import { cookies } from "next/headers";
import React, { Suspense } from "react";

import { AntdRegistry } from "@ant-design/nextjs-registry";
import { ColorModeContextProvider } from "@contexts/color-mode";
import { authProvider } from "@providers/auth-provider";
import { dataProvider } from "@providers/data-provider";
import "@refinedev/antd/dist/reset.css";

export const metadata: Metadata = {
  title: "Refine",
  description: "Generated by create refine app",
  icons: {
    icon: "/favicon.ico",
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = cookies();
  const theme = cookieStore.get("theme");
  const defaultMode = theme?.value === "dark" ? "dark" : "light";

  return (
    <html lang="en">
      <body>
        <Suspense>
          <RefineKbarProvider>
            <AntdRegistry>
              <ColorModeContextProvider defaultMode={defaultMode}>
                <DevtoolsProvider>
                  <Refine
                    routerProvider={routerProvider}
                    authProvider={authProvider}
                    dataProvider={dataProvider}
                    notificationProvider={useNotificationProvider}
                    resources={[
                      {
                        name: 'layout',
                        list: '/layout',
                        create: '/layout/create',
                        edit: '/layout/edit/:id',
                        show: '/layout/show/:id',
                        meta: {
                          label: 'Layout',
                        },
                      },
                      {
                        name: 'advertisement-templates',
                        list: '/advertisement-templates',
                        create: '/advertisement-templates/create',
                        edit: '/advertisement-templates/edit/:id',
                        show: '/advertisement-templates/show/:id',
                        meta: {
                          label: 'Advertisement template',
                        },
                      },
                      {
                        name: 'advertisements',
                        list: '/advertisements',
                        create: '/advertisements/create',
                        edit: '/advertisements/edit/:id',
                        show: '/advertisements/show/:id',
                        meta: {
                          label: 'Advertisements',
                        },
                      },
                      {
                        name: 'articles',
                        list: '/articles',
                        create: '/articles/create',
                        edit: '/articles/edit/:id',
                        show: '/articles/show/:id',
                        meta: {
                          label: 'Articles',
                        },
                      },
                      {
                        name: 'block-groups',
                        list: '/block-groups',
                        create: '/block-groups/create',
                        edit: '/block-groups/edit/:id',
                        show: '/block-groups/show/:id',
                        meta: {
                          label: 'Block Groups',
                        },
                      },
                      {
                        name: 'blocks',
                        list: '/blocks',
                        create: '/blocks/create',
                        edit: '/blocks/edit/:id',
                        show: '/blocks/show/:id',
                        meta: {
                          label: 'Blocks',
                        },
                      },
                      {
                        name: 'columns',
                        list: '/columns',
                        create: '/columns/create',
                        edit: '/columns/edit/:id',
                        show: '/columns/show/:id',
                        meta: {
                          label: 'Columns',
                        },
                      },
                      {
                        name: 'photos',
                        list: '/photos',
                        create: '/photos/create',
                        edit: '/photos/edit/:id',
                        show: '/photos/show/:id',
                        meta: {
                          label: 'Photos',
                        },
                      },

                      {
                        name: 'newspaper',
                        list: '/newspaper',
                        create: '/newspaper/create',
                        edit: '/newspaper/edit/:id',
                        show: '/newspaper/show/:id',
                        meta: {
                          label: 'Newspaper issues',
                        },
                      },
                    ]}
                    options={{
                      syncWithLocation: true,
                      warnWhenUnsavedChanges: true,
                      useNewQueryKeys: true,
                      projectId: "5dXQNc-LgkBeL-IkhHJz",
                    }}
                  >
                    {children}
                    <RefineKbar />
                  </Refine>
                </DevtoolsProvider>
              </ColorModeContextProvider>
            </AntdRegistry>
          </RefineKbarProvider>
        </Suspense>
      </body>
    </html>
  );
}
